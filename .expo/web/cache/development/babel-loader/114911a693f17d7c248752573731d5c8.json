{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nexports.featureObjectToString = featureObjectToString;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _compareUrls = _interopRequireDefault(require(\"compare-urls\"));\n\nvar _expoModulesCore = require(\"expo-modules-core\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _WebBrowser = require(\"./WebBrowser.types\");\n\nvar POPUP_WIDTH = 500;\nvar POPUP_HEIGHT = 650;\nvar popupWindow = null;\nvar listenerMap = new Map();\n\nvar getHandle = function getHandle() {\n  return 'ExpoWebBrowserRedirectHandle';\n};\n\nvar getOriginUrlHandle = function getOriginUrlHandle(hash) {\n  return \"ExpoWebBrowser_OriginUrl_\" + hash;\n};\n\nvar getRedirectUrlHandle = function getRedirectUrlHandle(hash) {\n  return \"ExpoWebBrowser_RedirectUrl_\" + hash;\n};\n\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n\n  popupWindow.close();\n\n  if (listenerMap.has(popupWindow)) {\n    var _listenerMap$get = listenerMap.get(popupWindow),\n        listener = _listenerMap$get.listener,\n        appStateSubscription = _listenerMap$get.appStateSubscription,\n        interval = _listenerMap$get.interval;\n\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    appStateSubscription.remove();\n    listenerMap.delete(popupWindow);\n    var handle = window.localStorage.getItem(getHandle());\n\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n\n    popupWindow = null;\n  }\n}\n\nvar _default = {\n  get name() {\n    return 'ExpoWebBrowser';\n  },\n\n  openBrowserAsync: function () {\n    var _openBrowserAsync = (0, _asyncToGenerator2.default)(function* (url) {\n      var browserParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      if (!_expoModulesCore.Platform.isDOMAvailable) return {\n        type: _WebBrowser.WebBrowserResultType.CANCEL\n      };\n      var _browserParams$window = browserParams.windowName,\n          windowName = _browserParams$window === void 0 ? '_blank' : _browserParams$window,\n          windowFeatures = browserParams.windowFeatures;\n      var features = getPopupFeaturesString(windowFeatures);\n      window.open(url, windowName, features);\n      return {\n        type: _WebBrowser.WebBrowserResultType.OPENED\n      };\n    });\n\n    function openBrowserAsync(_x) {\n      return _openBrowserAsync.apply(this, arguments);\n    }\n\n    return openBrowserAsync;\n  }(),\n  dismissAuthSession: function dismissAuthSession() {\n    if (!_expoModulesCore.Platform.isDOMAvailable) return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession: function maybeCompleteAuthSession(_ref) {\n    var _window$opener;\n\n    var skipRedirectCheck = _ref.skipRedirectCheck;\n\n    if (!_expoModulesCore.Platform.isDOMAvailable) {\n      return {\n        type: 'failed',\n        message: 'Cannot use expo-web-browser in a non-browser environment'\n      };\n    }\n\n    var handle = window.localStorage.getItem(getHandle());\n\n    if (!handle) {\n      return {\n        type: 'failed',\n        message: 'No auth session is currently in progress'\n      };\n    }\n\n    var url = window.location.href;\n\n    if (skipRedirectCheck !== true) {\n      var redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      var currentUrl = window.location.origin + window.location.pathname;\n\n      if (!(0, _compareUrls.default)(redirectUrl, currentUrl)) {\n        return {\n          type: 'failed',\n          message: \"Current URL \\\"\" + currentUrl + \"\\\" and original redirect URL \\\"\" + redirectUrl + \"\\\" do not match.\"\n        };\n      }\n    }\n\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n    var parent = (_window$opener = window.opener) != null ? _window$opener : window.parent;\n\n    if (!parent) {\n      throw new _expoModulesCore.CodedError('ERR_WEB_BROWSER_REDIRECT', \"The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.\");\n    }\n\n    parent.postMessage({\n      url: url,\n      expoSender: handle\n    }, parent.location.toString());\n    return {\n      type: 'success',\n      message: \"Attempting to complete auth\"\n    };\n  },\n  openAuthSessionAsync: function () {\n    var _openAuthSessionAsync = (0, _asyncToGenerator2.default)(function* (url, redirectUrl, openOptions) {\n      var _redirectUrl, _popupWindow;\n\n      if (!_expoModulesCore.Platform.isDOMAvailable) return {\n        type: _WebBrowser.WebBrowserResultType.CANCEL\n      };\n      redirectUrl = (_redirectUrl = redirectUrl) != null ? _redirectUrl : getRedirectUrlFromUrlOrGenerate(url);\n\n      if (popupWindow == null || (_popupWindow = popupWindow) != null && _popupWindow.closed) {\n        var features = getPopupFeaturesString(openOptions == null ? void 0 : openOptions.windowFeatures);\n        popupWindow = window.open(url, openOptions == null ? void 0 : openOptions.windowName, features);\n\n        if (popupWindow) {\n          try {\n            popupWindow.focus();\n          } catch (_unused) {}\n        } else {\n          throw new _expoModulesCore.CodedError('ERR_WEB_BROWSER_BLOCKED', 'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.');\n        }\n      }\n\n      var state = yield getStateFromUrlOrGenerateAsync(url);\n      window.localStorage.setItem(getHandle(), state);\n      window.localStorage.setItem(getRedirectUrlHandle(state), redirectUrl);\n      return new Promise(function () {\n        var _ref2 = (0, _asyncToGenerator2.default)(function* (resolve) {\n          var listener = function listener(event) {\n            if (!event.isTrusted) return;\n\n            if (event.origin !== window.location.origin) {\n              return;\n            }\n\n            var data = event.data;\n            var handle = window.localStorage.getItem(getHandle());\n\n            if (data.expoSender === handle) {\n              dismissPopup();\n              resolve({\n                type: 'success',\n                url: data.url\n              });\n            }\n          };\n\n          window.addEventListener('message', listener, false);\n\n          var appStateListener = function appStateListener(state) {\n            if (state !== 'active') {\n              return;\n            }\n\n            var handle = window.localStorage.getItem(getHandle());\n\n            if (handle) {\n              var _url = window.localStorage.getItem(getOriginUrlHandle(handle));\n\n              if (_url) {\n                dismissPopup();\n                resolve({\n                  type: 'success',\n                  url: _url\n                });\n              }\n            }\n          };\n\n          var appStateSubscription = _reactNative.AppState.addEventListener('change', appStateListener);\n\n          var interval = setInterval(function () {\n            var _popupWindow2;\n\n            if ((_popupWindow2 = popupWindow) != null && _popupWindow2.closed) {\n              if (resolve) resolve({\n                type: _WebBrowser.WebBrowserResultType.DISMISS\n              });\n              clearInterval(interval);\n              dismissPopup();\n            }\n          }, 1000);\n          listenerMap.set(popupWindow, {\n            listener: listener,\n            interval: interval,\n            appStateSubscription: appStateSubscription\n          });\n        });\n\n        return function (_x5) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    });\n\n    function openAuthSessionAsync(_x2, _x3, _x4) {\n      return _openAuthSessionAsync.apply(this, arguments);\n    }\n\n    return openAuthSessionAsync;\n  }()\n};\nexports.default = _default;\n\nfunction isCryptoAvailable() {\n  var _window;\n\n  if (!_expoModulesCore.Platform.isDOMAvailable) return false;\n  return !!((_window = window) != null && _window.crypto);\n}\n\nfunction isSubtleCryptoAvailable() {\n  if (!isCryptoAvailable()) return false;\n  return !!window.crypto.subtle;\n}\n\nfunction getStateFromUrlOrGenerateAsync(_x6) {\n  return _getStateFromUrlOrGenerateAsync.apply(this, arguments);\n}\n\nfunction _getStateFromUrlOrGenerateAsync() {\n  _getStateFromUrlOrGenerateAsync = (0, _asyncToGenerator2.default)(function* (inputUrl) {\n    var url = new URL(inputUrl);\n\n    if (url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string') {\n      return url.searchParams.get('state');\n    }\n\n    return yield generateStateAsync();\n  });\n  return _getStateFromUrlOrGenerateAsync.apply(this, arguments);\n}\n\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl) {\n  var url = new URL(inputUrl);\n\n  if (url.searchParams.has('redirect_uri') && typeof url.searchParams.get('redirect_uri') === 'string') {\n    return url.searchParams.get('redirect_uri');\n  }\n\n  return location.origin + location.pathname;\n}\n\nvar CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nfunction generateStateAsync() {\n  return _generateStateAsync.apply(this, arguments);\n}\n\nfunction _generateStateAsync() {\n  _generateStateAsync = (0, _asyncToGenerator2.default)(function* () {\n    if (!isSubtleCryptoAvailable()) {\n      throw new _expoModulesCore.CodedError('ERR_WEB_BROWSER_CRYPTO', \"The current environment doesn't support crypto. Ensure you are running from a secure origin (https).\");\n    }\n\n    var encoder = new TextEncoder();\n    var data = generateRandom(10);\n    var buffer = encoder.encode(data);\n    var hashedData = yield crypto.subtle.digest('SHA-256', buffer);\n    var state = btoa(String.fromCharCode.apply(String, (0, _toConsumableArray2.default)(new Uint8Array(hashedData))));\n    return state;\n  });\n  return _generateStateAsync.apply(this, arguments);\n}\n\nfunction generateRandom(size) {\n  var arr = new Uint8Array(size);\n\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n\n  var array = new Uint8Array(arr.length);\n\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (var i = 0; i < size; i += 1) {\n      array[i] = Math.random() * CHARSET.length | 0;\n    }\n  }\n\n  return bufferToString(array);\n}\n\nfunction bufferToString(buffer) {\n  var state = [];\n\n  for (var i = 0; i < buffer.byteLength; i += 1) {\n    var index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n\n  return state.join('');\n}\n\nfunction normalizePopupFeaturesString(options) {\n  var windowFeatures = {};\n\n  if (typeof options === 'string') {\n    var windowFeaturePairs = options.split(',');\n\n    for (var pair of windowFeaturePairs) {\n      var _pair$trim$split = pair.trim().split('='),\n          _pair$trim$split2 = (0, _slicedToArray2.default)(_pair$trim$split, 2),\n          key = _pair$trim$split2[0],\n          value = _pair$trim$split2[1];\n\n      if (key && value) {\n        windowFeatures[key] = value;\n      }\n    }\n  } else if (options) {\n    windowFeatures = options;\n  }\n\n  return windowFeatures;\n}\n\nfunction getPopupFeaturesString(options) {\n  var _windowFeatures$width, _windowFeatures$heigh, _windowFeatures$top, _windowFeatures$left, _windowFeatures$toolb, _windowFeatures$menub, _windowFeatures$locat, _windowFeatures$resiz, _windowFeatures$statu, _windowFeatures$scrol;\n\n  var windowFeatures = normalizePopupFeaturesString(options);\n  var width = (_windowFeatures$width = windowFeatures.width) != null ? _windowFeatures$width : POPUP_WIDTH;\n  var height = (_windowFeatures$heigh = windowFeatures.height) != null ? _windowFeatures$heigh : POPUP_HEIGHT;\n\n  var dimensions = _reactNative.Dimensions.get('screen');\n\n  var top = (_windowFeatures$top = windowFeatures.top) != null ? _windowFeatures$top : Math.max(0, (dimensions.height - height) * 0.5);\n  var left = (_windowFeatures$left = windowFeatures.left) != null ? _windowFeatures$left : Math.max(0, (dimensions.width - width) * 0.5);\n  return featureObjectToString(Object.assign({}, windowFeatures, {\n    toolbar: (_windowFeatures$toolb = windowFeatures.toolbar) != null ? _windowFeatures$toolb : 'no',\n    menubar: (_windowFeatures$menub = windowFeatures.menubar) != null ? _windowFeatures$menub : 'no',\n    location: (_windowFeatures$locat = windowFeatures.location) != null ? _windowFeatures$locat : 'yes',\n    resizable: (_windowFeatures$resiz = windowFeatures.resizable) != null ? _windowFeatures$resiz : 'yes',\n    status: (_windowFeatures$statu = windowFeatures.status) != null ? _windowFeatures$statu : 'no',\n    scrollbars: (_windowFeatures$scrol = windowFeatures.scrollbars) != null ? _windowFeatures$scrol : 'yes',\n    top: top,\n    left: left,\n    width: width,\n    height: height\n  }));\n}\n\nfunction featureObjectToString(features) {\n  return Object.keys(features).reduce(function (prev, current) {\n    var value = features[current];\n\n    if (typeof value === 'boolean') {\n      value = value ? 'yes' : 'no';\n    }\n\n    if (current && value) {\n      if (prev) prev += ',';\n      return \"\" + prev + current + \"=\" + value;\n    }\n\n    return prev;\n  }, '');\n}","map":{"version":3,"mappings":"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","names":["POPUP_WIDTH","POPUP_HEIGHT","popupWindow","listenerMap","Map","getHandle","getOriginUrlHandle","hash","getRedirectUrlHandle","dismissPopup","close","has","get","listener","appStateSubscription","interval","clearInterval","window","removeEventListener","remove","delete","handle","localStorage","getItem","removeItem","name","openBrowserAsync","url","browserParams","Platform","isDOMAvailable","type","WebBrowserResultType","CANCEL","windowName","windowFeatures","features","getPopupFeaturesString","open","OPENED","dismissAuthSession","maybeCompleteAuthSession","skipRedirectCheck","message","location","href","redirectUrl","currentUrl","origin","pathname","setItem","parent","opener","CodedError","postMessage","expoSender","toString","openAuthSessionAsync","openOptions","getRedirectUrlFromUrlOrGenerate","closed","focus","state","getStateFromUrlOrGenerateAsync","Promise","resolve","event","isTrusted","data","addEventListener","appStateListener","AppState","setInterval","DISMISS","set","isCryptoAvailable","crypto","isSubtleCryptoAvailable","subtle","inputUrl","URL","searchParams","generateStateAsync","CHARSET","encoder","TextEncoder","generateRandom","buffer","encode","hashedData","digest","btoa","String","fromCharCode","Uint8Array","size","arr","byteLength","length","array","getRandomValues","i","Math","random","bufferToString","index","push","join","normalizePopupFeaturesString","options","windowFeaturePairs","split","pair","trim","key","value","width","height","dimensions","Dimensions","top","max","left","featureObjectToString","toolbar","menubar","resizable","status","scrollbars","Object","keys","reduce","prev","current"],"sourceRoot":"","sources":["../src/ExpoWebBrowser.web.ts"],"sourcesContent":["import compareUrls from 'compare-urls';\nimport { CodedError, Platform } from 'expo-modules-core';\nimport { AppState, Dimensions, AppStateStatus, NativeEventSubscription } from 'react-native';\n\nimport {\n  WebBrowserAuthSessionResult,\n  WebBrowserOpenOptions,\n  WebBrowserResult,\n  WebBrowserResultType,\n  WebBrowserWindowFeatures,\n} from './WebBrowser.types';\n\nconst POPUP_WIDTH = 500;\nconst POPUP_HEIGHT = 650;\n\nlet popupWindow: Window | null = null;\n\nconst listenerMap = new Map();\n\nconst getHandle = () => 'ExpoWebBrowserRedirectHandle';\nconst getOriginUrlHandle = (hash: string) => `ExpoWebBrowser_OriginUrl_${hash}`;\nconst getRedirectUrlHandle = (hash: string) => `ExpoWebBrowser_RedirectUrl_${hash}`;\n\nfunction dismissPopup() {\n  if (!popupWindow) {\n    return;\n  }\n  popupWindow.close();\n  if (listenerMap.has(popupWindow)) {\n    const { listener, appStateSubscription, interval } = listenerMap.get(popupWindow);\n    clearInterval(interval);\n    window.removeEventListener('message', listener);\n    (appStateSubscription as NativeEventSubscription).remove();\n    listenerMap.delete(popupWindow);\n\n    const handle = window.localStorage.getItem(getHandle());\n    if (handle) {\n      window.localStorage.removeItem(getHandle());\n      window.localStorage.removeItem(getOriginUrlHandle(handle));\n      window.localStorage.removeItem(getRedirectUrlHandle(handle));\n    }\n\n    popupWindow = null;\n  }\n}\n\nexport default {\n  get name() {\n    return 'ExpoWebBrowser';\n  },\n  async openBrowserAsync(\n    url: string,\n    browserParams: WebBrowserOpenOptions = {}\n  ): Promise<WebBrowserResult> {\n    if (!Platform.isDOMAvailable) return { type: WebBrowserResultType.CANCEL };\n    const { windowName = '_blank', windowFeatures } = browserParams;\n    const features = getPopupFeaturesString(windowFeatures);\n    window.open(url, windowName, features);\n    return { type: WebBrowserResultType.OPENED };\n  },\n  dismissAuthSession() {\n    if (!Platform.isDOMAvailable) return;\n    dismissPopup();\n  },\n  maybeCompleteAuthSession({ skipRedirectCheck }: { skipRedirectCheck?: boolean }): {\n    type: 'success' | 'failed';\n    message: string;\n  } {\n    if (!Platform.isDOMAvailable) {\n      return {\n        type: 'failed',\n        message: 'Cannot use expo-web-browser in a non-browser environment',\n      };\n    }\n    const handle = window.localStorage.getItem(getHandle());\n\n    if (!handle) {\n      return { type: 'failed', message: 'No auth session is currently in progress' };\n    }\n\n    const url = window.location.href;\n\n    if (skipRedirectCheck !== true) {\n      const redirectUrl = window.localStorage.getItem(getRedirectUrlHandle(handle));\n      // Compare the original redirect url against the current url with it's query params removed.\n      const currentUrl = window.location.origin + window.location.pathname;\n      if (!compareUrls(redirectUrl, currentUrl)) {\n        return {\n          type: 'failed',\n          message: `Current URL \"${currentUrl}\" and original redirect URL \"${redirectUrl}\" do not match.`,\n        };\n      }\n    }\n\n    // Save the link for app state listener\n    window.localStorage.setItem(getOriginUrlHandle(handle), url);\n\n    // Get the window that created the current popup\n    const parent = window.opener ?? window.parent;\n    if (!parent) {\n      throw new CodedError(\n        'ERR_WEB_BROWSER_REDIRECT',\n        `The window cannot complete the redirect request because the invoking window doesn't have a reference to it's parent. This can happen if the parent window was reloaded.`\n      );\n    }\n    // Send the URL back to the opening window.\n    parent.postMessage({ url, expoSender: handle }, parent.location.toString());\n    return { type: 'success', message: `Attempting to complete auth` };\n\n    // Maybe set timer to throw an error if the window is still open after attempting to complete.\n  },\n  // This method should be invoked from user input.\n  async openAuthSessionAsync(\n    url: string,\n    redirectUrl?: string,\n    openOptions?: WebBrowserOpenOptions\n  ): Promise<WebBrowserAuthSessionResult> {\n    if (!Platform.isDOMAvailable) return { type: WebBrowserResultType.CANCEL };\n\n    redirectUrl = redirectUrl ?? getRedirectUrlFromUrlOrGenerate(url);\n\n    if (popupWindow == null || popupWindow?.closed) {\n      const features = getPopupFeaturesString(openOptions?.windowFeatures);\n      popupWindow = window.open(url, openOptions?.windowName, features);\n\n      if (popupWindow) {\n        try {\n          popupWindow.focus();\n        } catch {}\n      } else {\n        throw new CodedError(\n          'ERR_WEB_BROWSER_BLOCKED',\n          'Popup window was blocked by the browser or failed to open. This can happen in mobile browsers when the window.open() method was invoked too long after a user input was fired.'\n        );\n      }\n    }\n\n    const state = await getStateFromUrlOrGenerateAsync(url);\n\n    // Save handle for session\n    window.localStorage.setItem(getHandle(), state);\n    // Save redirect Url for further verification\n    window.localStorage.setItem(getRedirectUrlHandle(state), redirectUrl);\n\n    return new Promise(async (resolve) => {\n      // Create a listener for messages sent from the popup\n      const listener = (event: MessageEvent) => {\n        if (!event.isTrusted) return;\n        // Ensure we trust the sender.\n        if (event.origin !== window.location.origin) {\n          return;\n        }\n        const { data } = event;\n        // Use a crypto hash to invalid message.\n        const handle = window.localStorage.getItem(getHandle());\n        // Ensure the sender is also from expo-web-browser\n        if (data.expoSender === handle) {\n          dismissPopup();\n          resolve({ type: 'success', url: data.url });\n        }\n      };\n\n      // Add a listener for receiving messages from the popup.\n      window.addEventListener('message', listener, false);\n\n      // Create an app state listener as a fallback to the popup listener\n      const appStateListener = (state: AppStateStatus) => {\n        if (state !== 'active') {\n          return;\n        }\n        const handle = window.localStorage.getItem(getHandle());\n        if (handle) {\n          const url = window.localStorage.getItem(getOriginUrlHandle(handle));\n          if (url) {\n            dismissPopup();\n            resolve({ type: 'success', url });\n          }\n        }\n      };\n\n      const appStateSubscription = AppState.addEventListener('change', appStateListener);\n\n      // Check if the window has been closed every second.\n      const interval = setInterval(() => {\n        if (popupWindow?.closed) {\n          if (resolve) resolve({ type: WebBrowserResultType.DISMISS });\n          clearInterval(interval);\n          dismissPopup();\n        }\n      }, 1000);\n\n      // Store the listener and interval for clean up.\n      listenerMap.set(popupWindow, {\n        listener,\n        interval,\n        appStateSubscription,\n      });\n    });\n  },\n};\n\n// Crypto\nfunction isCryptoAvailable(): boolean {\n  if (!Platform.isDOMAvailable) return false;\n  return !!(window?.crypto as any);\n}\n\nfunction isSubtleCryptoAvailable(): boolean {\n  if (!isCryptoAvailable()) return false;\n  return !!(window.crypto.subtle as any);\n}\n\nasync function getStateFromUrlOrGenerateAsync(inputUrl: string): Promise<string> {\n  const url = new URL(inputUrl);\n  if (url.searchParams.has('state') && typeof url.searchParams.get('state') === 'string') {\n    // Ensure we reuse the auth state if it's passed in.\n    return url.searchParams.get('state')!;\n  }\n  // Generate a crypto state for verifying the return popup.\n  return await generateStateAsync();\n}\n\nfunction getRedirectUrlFromUrlOrGenerate(inputUrl: string): string {\n  const url = new URL(inputUrl);\n  if (\n    url.searchParams.has('redirect_uri') &&\n    typeof url.searchParams.get('redirect_uri') === 'string'\n  ) {\n    // Ensure we reuse the redirect_uri if it's passed in the input url.\n    return url.searchParams.get('redirect_uri')!;\n  }\n  // Emulate how native uses Constants.linkingUrl\n  return location.origin + location.pathname;\n}\n\nconst CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\nasync function generateStateAsync(): Promise<string> {\n  if (!isSubtleCryptoAvailable()) {\n    throw new CodedError(\n      'ERR_WEB_BROWSER_CRYPTO',\n      `The current environment doesn't support crypto. Ensure you are running from a secure origin (https).`\n    );\n  }\n  const encoder = new TextEncoder();\n\n  const data = generateRandom(10);\n  const buffer = encoder.encode(data);\n  const hashedData = await crypto.subtle.digest('SHA-256', buffer);\n  const state = btoa(String.fromCharCode(...new Uint8Array(hashedData)));\n  return state;\n}\n\nfunction generateRandom(size: number): string {\n  let arr = new Uint8Array(size);\n  if (arr.byteLength !== arr.length) {\n    arr = new Uint8Array(arr.buffer);\n  }\n  const array = new Uint8Array(arr.length);\n  if (isCryptoAvailable()) {\n    window.crypto.getRandomValues(array);\n  } else {\n    for (let i = 0; i < size; i += 1) {\n      array[i] = (Math.random() * CHARSET.length) | 0;\n    }\n  }\n  return bufferToString(array);\n}\n\nfunction bufferToString(buffer): string {\n  const state: string[] = [];\n  for (let i = 0; i < buffer.byteLength; i += 1) {\n    const index = buffer[i] % CHARSET.length;\n    state.push(CHARSET[index]);\n  }\n  return state.join('');\n}\n\n// Window Features\n\n// Ensure feature string is an object\nfunction normalizePopupFeaturesString(\n  options?: WebBrowserWindowFeatures | string\n): Record<string, any> {\n  let windowFeatures: Record<string, any> = {};\n  // This should be avoided because it adds extra time to the popup command.\n  if (typeof options === 'string') {\n    // Convert string of `key=value,foo=bar` into an object\n    const windowFeaturePairs = options.split(',');\n    for (const pair of windowFeaturePairs) {\n      const [key, value] = pair.trim().split('=');\n      if (key && value) {\n        windowFeatures[key] = value;\n      }\n    }\n  } else if (options) {\n    windowFeatures = options;\n  }\n  return windowFeatures;\n}\n\n// Apply default values to the input feature set\nfunction getPopupFeaturesString(options?: WebBrowserWindowFeatures | string): string {\n  const windowFeatures = normalizePopupFeaturesString(options);\n\n  const width = windowFeatures.width ?? POPUP_WIDTH;\n  const height = windowFeatures.height ?? POPUP_HEIGHT;\n\n  const dimensions = Dimensions.get('screen');\n  const top = windowFeatures.top ?? Math.max(0, (dimensions.height - height) * 0.5);\n  const left = windowFeatures.left ?? Math.max(0, (dimensions.width - width) * 0.5);\n\n  // Create a reasonable popup\n  // https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features\n  return featureObjectToString({\n    ...windowFeatures,\n    // Toolbar buttons (Back, Forward, Reload, Stop buttons).\n    toolbar: windowFeatures.toolbar ?? 'no',\n    menubar: windowFeatures.menubar ?? 'no',\n    // Shows the location bar or the address bar.\n    location: windowFeatures.location ?? 'yes',\n    resizable: windowFeatures.resizable ?? 'yes',\n    // If this feature is on, then the new secondary window has a status bar.\n    status: windowFeatures.status ?? 'no',\n    scrollbars: windowFeatures.scrollbars ?? 'yes',\n    top,\n    left,\n    width,\n    height,\n  });\n}\n\nexport function featureObjectToString(features: Record<string, any>): string {\n  return Object.keys(features).reduce<string>((prev, current) => {\n    let value = features[current];\n    if (typeof value === 'boolean') {\n      value = value ? 'yes' : 'no';\n    }\n    if (current && value) {\n      if (prev) prev += ',';\n      return `${prev}${current}=${value}`;\n    }\n    return prev;\n  }, '');\n}\n"]},"metadata":{},"sourceType":"script"}